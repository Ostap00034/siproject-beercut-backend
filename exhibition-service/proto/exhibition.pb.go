// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/exhibition.proto

package exhibition

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GenreData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenreData) Reset() {
	*x = GenreData{}
	mi := &file_proto_exhibition_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenreData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenreData) ProtoMessage() {}

func (x *GenreData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exhibition_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenreData.ProtoReflect.Descriptor instead.
func (*GenreData) Descriptor() ([]byte, []int) {
	return file_proto_exhibition_proto_rawDescGZIP(), []int{0}
}

func (x *GenreData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GenreData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GenreData) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GenreData) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type AuthorData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FullName      string                 `protobuf:"bytes,2,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	DateOfBirth   string                 `protobuf:"bytes,3,opt,name=date_of_birth,json=dateOfBirth,proto3" json:"date_of_birth,omitempty"`
	DateOfDeath   string                 `protobuf:"bytes,4,opt,name=date_of_death,json=dateOfDeath,proto3" json:"date_of_death,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthorData) Reset() {
	*x = AuthorData{}
	mi := &file_proto_exhibition_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthorData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorData) ProtoMessage() {}

func (x *AuthorData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exhibition_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorData.ProtoReflect.Descriptor instead.
func (*AuthorData) Descriptor() ([]byte, []int) {
	return file_proto_exhibition_proto_rawDescGZIP(), []int{1}
}

func (x *AuthorData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AuthorData) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *AuthorData) GetDateOfBirth() string {
	if x != nil {
		return x.DateOfBirth
	}
	return ""
}

func (x *AuthorData) GetDateOfDeath() string {
	if x != nil {
		return x.DateOfDeath
	}
	return ""
}

func (x *AuthorData) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type PictureData struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DateOfPainting string                 `protobuf:"bytes,3,opt,name=date_of_painting,json=dateOfPainting,proto3" json:"date_of_painting,omitempty"`
	GenresIds      []string               `protobuf:"bytes,4,rep,name=genres_ids,json=genresIds,proto3" json:"genres_ids,omitempty"`
	AuthorsIds     []string               `protobuf:"bytes,5,rep,name=authors_ids,json=authorsIds,proto3" json:"authors_ids,omitempty"`
	Authors        []*AuthorData          `protobuf:"bytes,6,rep,name=authors,proto3" json:"authors,omitempty"`
	Genres         []*GenreData           `protobuf:"bytes,7,rep,name=genres,proto3" json:"genres,omitempty"`
	ExhibitionId   string                 `protobuf:"bytes,8,opt,name=exhibition_id,json=exhibitionId,proto3" json:"exhibition_id,omitempty"`
	Cost           float64                `protobuf:"fixed64,9,opt,name=cost,proto3" json:"cost,omitempty"`
	Location       string                 `protobuf:"bytes,10,opt,name=location,proto3" json:"location,omitempty"`
	CreatedAt      string                 `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PictureData) Reset() {
	*x = PictureData{}
	mi := &file_proto_exhibition_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PictureData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PictureData) ProtoMessage() {}

func (x *PictureData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exhibition_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PictureData.ProtoReflect.Descriptor instead.
func (*PictureData) Descriptor() ([]byte, []int) {
	return file_proto_exhibition_proto_rawDescGZIP(), []int{2}
}

func (x *PictureData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PictureData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PictureData) GetDateOfPainting() string {
	if x != nil {
		return x.DateOfPainting
	}
	return ""
}

func (x *PictureData) GetGenresIds() []string {
	if x != nil {
		return x.GenresIds
	}
	return nil
}

func (x *PictureData) GetAuthorsIds() []string {
	if x != nil {
		return x.AuthorsIds
	}
	return nil
}

func (x *PictureData) GetAuthors() []*AuthorData {
	if x != nil {
		return x.Authors
	}
	return nil
}

func (x *PictureData) GetGenres() []*GenreData {
	if x != nil {
		return x.Genres
	}
	return nil
}

func (x *PictureData) GetExhibitionId() string {
	if x != nil {
		return x.ExhibitionId
	}
	return ""
}

func (x *PictureData) GetCost() float64 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *PictureData) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *PictureData) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type ExhibitionData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	PicturesIds   []string               `protobuf:"bytes,4,rep,name=pictures_ids,json=picturesIds,proto3" json:"pictures_ids,omitempty"`
	Pictures      []*PictureData         `protobuf:"bytes,5,rep,name=pictures,proto3" json:"pictures,omitempty"`
	Status        string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExhibitionData) Reset() {
	*x = ExhibitionData{}
	mi := &file_proto_exhibition_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExhibitionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExhibitionData) ProtoMessage() {}

func (x *ExhibitionData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exhibition_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExhibitionData.ProtoReflect.Descriptor instead.
func (*ExhibitionData) Descriptor() ([]byte, []int) {
	return file_proto_exhibition_proto_rawDescGZIP(), []int{3}
}

func (x *ExhibitionData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ExhibitionData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExhibitionData) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ExhibitionData) GetPicturesIds() []string {
	if x != nil {
		return x.PicturesIds
	}
	return nil
}

func (x *ExhibitionData) GetPictures() []*PictureData {
	if x != nil {
		return x.Pictures
	}
	return nil
}

func (x *ExhibitionData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ExhibitionData) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type GetAllRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageNumber    int32                  `protobuf:"varint,1,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllRequest) Reset() {
	*x = GetAllRequest{}
	mi := &file_proto_exhibition_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllRequest) ProtoMessage() {}

func (x *GetAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exhibition_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllRequest.ProtoReflect.Descriptor instead.
func (*GetAllRequest) Descriptor() ([]byte, []int) {
	return file_proto_exhibition_proto_rawDescGZIP(), []int{4}
}

func (x *GetAllRequest) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *GetAllRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetAllResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Exhibitions   []*ExhibitionData      `protobuf:"bytes,1,rep,name=exhibitions,proto3" json:"exhibitions,omitempty"`
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	TotalPages    int32                  `protobuf:"varint,3,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllResponse) Reset() {
	*x = GetAllResponse{}
	mi := &file_proto_exhibition_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllResponse) ProtoMessage() {}

func (x *GetAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exhibition_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllResponse.ProtoReflect.Descriptor instead.
func (*GetAllResponse) Descriptor() ([]byte, []int) {
	return file_proto_exhibition_proto_rawDescGZIP(), []int{5}
}

func (x *GetAllResponse) GetExhibitions() []*ExhibitionData {
	if x != nil {
		return x.Exhibitions
	}
	return nil
}

func (x *GetAllResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetAllResponse) GetTotalPages() int32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

type GetExhibitionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExhibitionId  string                 `protobuf:"bytes,1,opt,name=exhibition_id,json=exhibitionId,proto3" json:"exhibition_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetExhibitionRequest) Reset() {
	*x = GetExhibitionRequest{}
	mi := &file_proto_exhibition_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExhibitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExhibitionRequest) ProtoMessage() {}

func (x *GetExhibitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exhibition_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExhibitionRequest.ProtoReflect.Descriptor instead.
func (*GetExhibitionRequest) Descriptor() ([]byte, []int) {
	return file_proto_exhibition_proto_rawDescGZIP(), []int{6}
}

func (x *GetExhibitionRequest) GetExhibitionId() string {
	if x != nil {
		return x.ExhibitionId
	}
	return ""
}

type GetExhibitionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Exhibition    *ExhibitionData        `protobuf:"bytes,1,opt,name=exhibition,proto3" json:"exhibition,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetExhibitionResponse) Reset() {
	*x = GetExhibitionResponse{}
	mi := &file_proto_exhibition_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExhibitionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExhibitionResponse) ProtoMessage() {}

func (x *GetExhibitionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exhibition_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExhibitionResponse.ProtoReflect.Descriptor instead.
func (*GetExhibitionResponse) Descriptor() ([]byte, []int) {
	return file_proto_exhibition_proto_rawDescGZIP(), []int{7}
}

func (x *GetExhibitionResponse) GetExhibition() *ExhibitionData {
	if x != nil {
		return x.Exhibition
	}
	return nil
}

type CreateExhibitionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	PicturesIds   []string               `protobuf:"bytes,3,rep,name=pictures_ids,json=picturesIds,proto3" json:"pictures_ids,omitempty"`
	Status        string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateExhibitionRequest) Reset() {
	*x = CreateExhibitionRequest{}
	mi := &file_proto_exhibition_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateExhibitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateExhibitionRequest) ProtoMessage() {}

func (x *CreateExhibitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exhibition_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateExhibitionRequest.ProtoReflect.Descriptor instead.
func (*CreateExhibitionRequest) Descriptor() ([]byte, []int) {
	return file_proto_exhibition_proto_rawDescGZIP(), []int{8}
}

func (x *CreateExhibitionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateExhibitionRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateExhibitionRequest) GetPicturesIds() []string {
	if x != nil {
		return x.PicturesIds
	}
	return nil
}

func (x *CreateExhibitionRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type CreateExhibitionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Exhibition    *ExhibitionData        `protobuf:"bytes,1,opt,name=exhibition,proto3" json:"exhibition,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateExhibitionResponse) Reset() {
	*x = CreateExhibitionResponse{}
	mi := &file_proto_exhibition_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateExhibitionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateExhibitionResponse) ProtoMessage() {}

func (x *CreateExhibitionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exhibition_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateExhibitionResponse.ProtoReflect.Descriptor instead.
func (*CreateExhibitionResponse) Descriptor() ([]byte, []int) {
	return file_proto_exhibition_proto_rawDescGZIP(), []int{9}
}

func (x *CreateExhibitionResponse) GetExhibition() *ExhibitionData {
	if x != nil {
		return x.Exhibition
	}
	return nil
}

func (x *CreateExhibitionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UpdateExhibitionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExhibitionId  string                 `protobuf:"bytes,1,opt,name=exhibition_id,json=exhibitionId,proto3" json:"exhibition_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	PicturesIds   []string               `protobuf:"bytes,4,rep,name=pictures_ids,json=picturesIds,proto3" json:"pictures_ids,omitempty"`
	Status        string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	UserId        string                 `protobuf:"bytes,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateExhibitionRequest) Reset() {
	*x = UpdateExhibitionRequest{}
	mi := &file_proto_exhibition_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateExhibitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateExhibitionRequest) ProtoMessage() {}

func (x *UpdateExhibitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exhibition_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateExhibitionRequest.ProtoReflect.Descriptor instead.
func (*UpdateExhibitionRequest) Descriptor() ([]byte, []int) {
	return file_proto_exhibition_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateExhibitionRequest) GetExhibitionId() string {
	if x != nil {
		return x.ExhibitionId
	}
	return ""
}

func (x *UpdateExhibitionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateExhibitionRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateExhibitionRequest) GetPicturesIds() []string {
	if x != nil {
		return x.PicturesIds
	}
	return nil
}

func (x *UpdateExhibitionRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpdateExhibitionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type UpdateExhibitionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Exhibition    *ExhibitionData        `protobuf:"bytes,1,opt,name=exhibition,proto3" json:"exhibition,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateExhibitionResponse) Reset() {
	*x = UpdateExhibitionResponse{}
	mi := &file_proto_exhibition_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateExhibitionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateExhibitionResponse) ProtoMessage() {}

func (x *UpdateExhibitionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exhibition_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateExhibitionResponse.ProtoReflect.Descriptor instead.
func (*UpdateExhibitionResponse) Descriptor() ([]byte, []int) {
	return file_proto_exhibition_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateExhibitionResponse) GetExhibition() *ExhibitionData {
	if x != nil {
		return x.Exhibition
	}
	return nil
}

type DeleteExhibitionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExhibitionId  string                 `protobuf:"bytes,1,opt,name=exhibition_id,json=exhibitionId,proto3" json:"exhibition_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteExhibitionRequest) Reset() {
	*x = DeleteExhibitionRequest{}
	mi := &file_proto_exhibition_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteExhibitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteExhibitionRequest) ProtoMessage() {}

func (x *DeleteExhibitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exhibition_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteExhibitionRequest.ProtoReflect.Descriptor instead.
func (*DeleteExhibitionRequest) Descriptor() ([]byte, []int) {
	return file_proto_exhibition_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteExhibitionRequest) GetExhibitionId() string {
	if x != nil {
		return x.ExhibitionId
	}
	return ""
}

type DeleteExhibitionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteExhibitionResponse) Reset() {
	*x = DeleteExhibitionResponse{}
	mi := &file_proto_exhibition_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteExhibitionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteExhibitionResponse) ProtoMessage() {}

func (x *DeleteExhibitionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exhibition_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteExhibitionResponse.ProtoReflect.Descriptor instead.
func (*DeleteExhibitionResponse) Descriptor() ([]byte, []int) {
	return file_proto_exhibition_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteExhibitionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ErrorResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Errors        map[string]string      `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorResponse) Reset() {
	*x = ErrorResponse{}
	mi := &file_proto_exhibition_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorResponse) ProtoMessage() {}

func (x *ErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_exhibition_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorResponse.ProtoReflect.Descriptor instead.
func (*ErrorResponse) Descriptor() ([]byte, []int) {
	return file_proto_exhibition_proto_rawDescGZIP(), []int{14}
}

func (x *ErrorResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ErrorResponse) GetErrors() map[string]string {
	if x != nil {
		return x.Errors
	}
	return nil
}

var File_proto_exhibition_proto protoreflect.FileDescriptor

const file_proto_exhibition_proto_rawDesc = "" +
	"\n" +
	"\x16proto/exhibition.proto\x12\n" +
	"exhibition\"p\n" +
	"\tGenreData\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"created_at\x18\x04 \x01(\tR\tcreatedAt\"\xa0\x01\n" +
	"\n" +
	"AuthorData\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tfull_name\x18\x02 \x01(\tR\bfullName\x12\"\n" +
	"\rdate_of_birth\x18\x03 \x01(\tR\vdateOfBirth\x12\"\n" +
	"\rdate_of_death\x18\x04 \x01(\tR\vdateOfDeath\x12\x1d\n" +
	"\n" +
	"created_at\x18\x05 \x01(\tR\tcreatedAt\"\xf0\x02\n" +
	"\vPictureData\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12(\n" +
	"\x10date_of_painting\x18\x03 \x01(\tR\x0edateOfPainting\x12\x1d\n" +
	"\n" +
	"genres_ids\x18\x04 \x03(\tR\tgenresIds\x12\x1f\n" +
	"\vauthors_ids\x18\x05 \x03(\tR\n" +
	"authorsIds\x120\n" +
	"\aauthors\x18\x06 \x03(\v2\x16.exhibition.AuthorDataR\aauthors\x12-\n" +
	"\x06genres\x18\a \x03(\v2\x15.exhibition.GenreDataR\x06genres\x12#\n" +
	"\rexhibition_id\x18\b \x01(\tR\fexhibitionId\x12\x12\n" +
	"\x04cost\x18\t \x01(\x01R\x04cost\x12\x1a\n" +
	"\blocation\x18\n" +
	" \x01(\tR\blocation\x12\x1d\n" +
	"\n" +
	"created_at\x18\v \x01(\tR\tcreatedAt\"\xe5\x01\n" +
	"\x0eExhibitionData\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12!\n" +
	"\fpictures_ids\x18\x04 \x03(\tR\vpicturesIds\x123\n" +
	"\bpictures\x18\x05 \x03(\v2\x17.exhibition.PictureDataR\bpictures\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\x12\x1d\n" +
	"\n" +
	"created_at\x18\a \x01(\tR\tcreatedAt\"M\n" +
	"\rGetAllRequest\x12\x1f\n" +
	"\vpage_number\x18\x01 \x01(\x05R\n" +
	"pageNumber\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\"\x85\x01\n" +
	"\x0eGetAllResponse\x12<\n" +
	"\vexhibitions\x18\x01 \x03(\v2\x1a.exhibition.ExhibitionDataR\vexhibitions\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\x12\x1f\n" +
	"\vtotal_pages\x18\x03 \x01(\x05R\n" +
	"totalPages\";\n" +
	"\x14GetExhibitionRequest\x12#\n" +
	"\rexhibition_id\x18\x01 \x01(\tR\fexhibitionId\"S\n" +
	"\x15GetExhibitionResponse\x12:\n" +
	"\n" +
	"exhibition\x18\x01 \x01(\v2\x1a.exhibition.ExhibitionDataR\n" +
	"exhibition\"\x8a\x01\n" +
	"\x17CreateExhibitionRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12!\n" +
	"\fpictures_ids\x18\x03 \x03(\tR\vpicturesIds\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\"p\n" +
	"\x18CreateExhibitionResponse\x12:\n" +
	"\n" +
	"exhibition\x18\x01 \x01(\v2\x1a.exhibition.ExhibitionDataR\n" +
	"exhibition\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xc8\x01\n" +
	"\x17UpdateExhibitionRequest\x12#\n" +
	"\rexhibition_id\x18\x01 \x01(\tR\fexhibitionId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12!\n" +
	"\fpictures_ids\x18\x04 \x03(\tR\vpicturesIds\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\x12\x17\n" +
	"\auser_id\x18\x06 \x01(\tR\x06userId\"V\n" +
	"\x18UpdateExhibitionResponse\x12:\n" +
	"\n" +
	"exhibition\x18\x01 \x01(\v2\x1a.exhibition.ExhibitionDataR\n" +
	"exhibition\">\n" +
	"\x17DeleteExhibitionRequest\x12#\n" +
	"\rexhibition_id\x18\x01 \x01(\tR\fexhibitionId\"4\n" +
	"\x18DeleteExhibitionResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"\xa3\x01\n" +
	"\rErrorResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12=\n" +
	"\x06errors\x18\x02 \x03(\v2%.exhibition.ErrorResponse.ErrorsEntryR\x06errors\x1a9\n" +
	"\vErrorsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x012\xc7\x03\n" +
	"\x11ExhibitionService\x12]\n" +
	"\x10CreateExhibition\x12#.exhibition.CreateExhibitionRequest\x1a$.exhibition.CreateExhibitionResponse\x12?\n" +
	"\x06GetAll\x12\x19.exhibition.GetAllRequest\x1a\x1a.exhibition.GetAllResponse\x12T\n" +
	"\rGetExhibition\x12 .exhibition.GetExhibitionRequest\x1a!.exhibition.GetExhibitionResponse\x12]\n" +
	"\x10UpdateExhibition\x12#.exhibition.UpdateExhibitionRequest\x1a$.exhibition.UpdateExhibitionResponse\x12]\n" +
	"\x10DeleteExhibition\x12#.exhibition.DeleteExhibitionRequest\x1a$.exhibition.DeleteExhibitionResponseBUZSgithub.com/Ostap00034/siproject-beercut-backend/exhibition-service/proto;exhibitionb\x06proto3"

var (
	file_proto_exhibition_proto_rawDescOnce sync.Once
	file_proto_exhibition_proto_rawDescData []byte
)

func file_proto_exhibition_proto_rawDescGZIP() []byte {
	file_proto_exhibition_proto_rawDescOnce.Do(func() {
		file_proto_exhibition_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_exhibition_proto_rawDesc), len(file_proto_exhibition_proto_rawDesc)))
	})
	return file_proto_exhibition_proto_rawDescData
}

var file_proto_exhibition_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_proto_exhibition_proto_goTypes = []any{
	(*GenreData)(nil),                // 0: exhibition.GenreData
	(*AuthorData)(nil),               // 1: exhibition.AuthorData
	(*PictureData)(nil),              // 2: exhibition.PictureData
	(*ExhibitionData)(nil),           // 3: exhibition.ExhibitionData
	(*GetAllRequest)(nil),            // 4: exhibition.GetAllRequest
	(*GetAllResponse)(nil),           // 5: exhibition.GetAllResponse
	(*GetExhibitionRequest)(nil),     // 6: exhibition.GetExhibitionRequest
	(*GetExhibitionResponse)(nil),    // 7: exhibition.GetExhibitionResponse
	(*CreateExhibitionRequest)(nil),  // 8: exhibition.CreateExhibitionRequest
	(*CreateExhibitionResponse)(nil), // 9: exhibition.CreateExhibitionResponse
	(*UpdateExhibitionRequest)(nil),  // 10: exhibition.UpdateExhibitionRequest
	(*UpdateExhibitionResponse)(nil), // 11: exhibition.UpdateExhibitionResponse
	(*DeleteExhibitionRequest)(nil),  // 12: exhibition.DeleteExhibitionRequest
	(*DeleteExhibitionResponse)(nil), // 13: exhibition.DeleteExhibitionResponse
	(*ErrorResponse)(nil),            // 14: exhibition.ErrorResponse
	nil,                              // 15: exhibition.ErrorResponse.ErrorsEntry
}
var file_proto_exhibition_proto_depIdxs = []int32{
	1,  // 0: exhibition.PictureData.authors:type_name -> exhibition.AuthorData
	0,  // 1: exhibition.PictureData.genres:type_name -> exhibition.GenreData
	2,  // 2: exhibition.ExhibitionData.pictures:type_name -> exhibition.PictureData
	3,  // 3: exhibition.GetAllResponse.exhibitions:type_name -> exhibition.ExhibitionData
	3,  // 4: exhibition.GetExhibitionResponse.exhibition:type_name -> exhibition.ExhibitionData
	3,  // 5: exhibition.CreateExhibitionResponse.exhibition:type_name -> exhibition.ExhibitionData
	3,  // 6: exhibition.UpdateExhibitionResponse.exhibition:type_name -> exhibition.ExhibitionData
	15, // 7: exhibition.ErrorResponse.errors:type_name -> exhibition.ErrorResponse.ErrorsEntry
	8,  // 8: exhibition.ExhibitionService.CreateExhibition:input_type -> exhibition.CreateExhibitionRequest
	4,  // 9: exhibition.ExhibitionService.GetAll:input_type -> exhibition.GetAllRequest
	6,  // 10: exhibition.ExhibitionService.GetExhibition:input_type -> exhibition.GetExhibitionRequest
	10, // 11: exhibition.ExhibitionService.UpdateExhibition:input_type -> exhibition.UpdateExhibitionRequest
	12, // 12: exhibition.ExhibitionService.DeleteExhibition:input_type -> exhibition.DeleteExhibitionRequest
	9,  // 13: exhibition.ExhibitionService.CreateExhibition:output_type -> exhibition.CreateExhibitionResponse
	5,  // 14: exhibition.ExhibitionService.GetAll:output_type -> exhibition.GetAllResponse
	7,  // 15: exhibition.ExhibitionService.GetExhibition:output_type -> exhibition.GetExhibitionResponse
	11, // 16: exhibition.ExhibitionService.UpdateExhibition:output_type -> exhibition.UpdateExhibitionResponse
	13, // 17: exhibition.ExhibitionService.DeleteExhibition:output_type -> exhibition.DeleteExhibitionResponse
	13, // [13:18] is the sub-list for method output_type
	8,  // [8:13] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_proto_exhibition_proto_init() }
func file_proto_exhibition_proto_init() {
	if File_proto_exhibition_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_exhibition_proto_rawDesc), len(file_proto_exhibition_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_exhibition_proto_goTypes,
		DependencyIndexes: file_proto_exhibition_proto_depIdxs,
		MessageInfos:      file_proto_exhibition_proto_msgTypes,
	}.Build()
	File_proto_exhibition_proto = out.File
	file_proto_exhibition_proto_goTypes = nil
	file_proto_exhibition_proto_depIdxs = nil
}
