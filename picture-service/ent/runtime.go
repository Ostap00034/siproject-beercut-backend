// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/Ostap00034/siproject-beercut-backend/picture-service/ent/picture"
	"github.com/Ostap00034/siproject-beercut-backend/picture-service/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	pictureFields := schema.Picture{}.Fields()
	_ = pictureFields
	// pictureDescName is the schema descriptor for name field.
	pictureDescName := pictureFields[0].Descriptor()
	// picture.NameValidator is a validator for the "name" field. It is called by the builders before save.
	picture.NameValidator = pictureDescName.Validators[0].(func(string) error)
	// pictureDescDateOfPainting is the schema descriptor for date_of_painting field.
	pictureDescDateOfPainting := pictureFields[1].Descriptor()
	// picture.DateOfPaintingValidator is a validator for the "date_of_painting" field. It is called by the builders before save.
	picture.DateOfPaintingValidator = pictureDescDateOfPainting.Validators[0].(func(string) error)
	// pictureDescCost is the schema descriptor for cost field.
	pictureDescCost := pictureFields[5].Descriptor()
	// picture.DefaultCost holds the default value on creation for the cost field.
	picture.DefaultCost = pictureDescCost.Default.(float64)
	// pictureDescCreatedAt is the schema descriptor for created_at field.
	pictureDescCreatedAt := pictureFields[7].Descriptor()
	// picture.DefaultCreatedAt holds the default value on creation for the created_at field.
	picture.DefaultCreatedAt = pictureDescCreatedAt.Default.(func() time.Time)
}
